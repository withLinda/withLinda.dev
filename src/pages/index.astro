---
import { getCollection } from 'astro:content'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'

const posts = await getCollection('blog')
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
)

// Group posts by category
const postsByCategory = sortedPosts.reduce((acc, post) => {
  const pathParts = post.id.split('/')
  const category = pathParts.length > 1
    ? pathParts[0]
        .split('-')
        .map((word: string) => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ')
    : 'Uncategorized'
  
  if (!acc[category]) acc[category] = []
  acc[category].push({
    ...post,
    url: `/blog/${post.id}`,
    date: new Date(post.data.pubDate).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    })
  })
  return acc
}, {} as Record<string, any[]>)

const categories = Object.keys(postsByCategory)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header />
    <Content>
      <style>
        .post-list {
          list-style: none;
          padding: 0;
        }
        .category {
          margin: 2rem 0 1rem;
          font-size: 1.1rem;
          font-weight: 500;
          @apply text-[#B8935A] dark:text-[#E1BB87] font-semibold;
        }
        .post-item {
          padding: 1rem 0;
          border-bottom: 1px solid #e2e8f0;
          transition: transform 0.2s ease;
          @apply border-solarized-border dark:border-nightowl-border;
        }
        .post-item:hover {
          transform: translateX(8px);
        }
        .post-item:hover .post-date {
          @apply text-[#FF684A] dark:text-[#FF684A];
        }
        .post-link {
          display: flex;
          justify-content: space-between;
          align-items: center;
          text-decoration: none;
          color: inherit;
        }
        .post-date {
          font-size: 0.9rem;
          color: #718096;
          transition: color 0.2s ease;
        }
        .post-item:hover {
          @apply border-[#FF684A] dark:border-[#FF684A];
        }
      </style>

      {categories.map(category => (
        <div>
          <h2 class="category">{category}</h2>
          <ul class="post-list">
            {postsByCategory[category].map(post => (
              <li class="post-item">
                <a class="post-link" href={post.url}>
                  <span class="text-solarized-blue dark:text-nightowl-blue">{post.data.title}</span>
                  <span class="post-date">{post.date}</span>
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </Content>
    <Footer />
  </Body>
</html>
