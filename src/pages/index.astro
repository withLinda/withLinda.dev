---
import { getCollection } from 'astro:content'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { SITE_TITLE, SITE_DESCRIPTION, CATEGORY_NAMES } from '../config'

const posts = await getCollection('blog')
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
)

// Group posts by category
const postsByCategory = sortedPosts.reduce((acc, post) => {
  const pathParts = post.id.split('/')
  const categoryDir = pathParts.length > 1 ? pathParts[0] : null
  
  // Use the category name mapping if available, otherwise fall back to formatted directory name
  const category = categoryDir
    ? (CATEGORY_NAMES[categoryDir] || categoryDir
        .split('-')
        .map((word: string) => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' '))
    : 'Uncategorized'
  
  if (!acc[category]) acc[category] = []
  acc[category].push({
    ...post,
    url: `/blog/${post.id}`,
    date: new Date(post.data.pubDate).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    })
  })
  return acc
}, {} as Record<string, any[]>)

const categories = Object.keys(postsByCategory)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header />
    <Content>
<!-- All styling moved to src/styles/themes/post-cards.css for better organization -->

      {categories.map(category => (
        <div>
          <h2 class="category-heading light-accent dark-accent">{category}</h2>
          <ul class="post-list">
            {postsByCategory[category].map(post => (
              <li class="post-item">
                <div class="post-card">
                  <a class="post-link" href={post.url}>
                    <h3 class="post-title">{post.data.title}</h3>
                    <span class="post-date">{post.date}</span>
                  </a>
                </div>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </Content>
    <Footer />
  </Body>
</html>
