---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'

interface Frontmatter {
  title: string;
  pubDate: string;
}

interface Post {
  file: string;
  url: string;
  frontmatter: Frontmatter;
}

const posts = await Promise.all(
  Object.values(await import.meta.glob<Post>('./posts/**/*.{md,mdx}'))
    .map(async (post) => {
      const postData = await post();
      // Extract category from file path - will be like './posts/category-name/file.md'
      const pathParts = postData.file.split('/posts/')[1].split('/');
      return {
        ...postData,
        category: pathParts.length > 1
          ? pathParts[0]
              .split('-')
              .map((word: string) => word.charAt(0).toUpperCase() + word.slice(1))
              .join(' ')
          : 'Uncategorized',
        date: new Date(postData.frontmatter.pubDate).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })
      }
    })
)

const categories = [...new Set(posts.map(post => post.category))]
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header />
    <Content>
      <style>
        .post-list {
          list-style: none;
          padding: 0;
        }
        .category {
          margin: 2rem 0 1rem;
          font-size: 1.1rem;
          font-weight: 500;
          @apply text-solarized-accent dark:text-nightowl-yellow font-semibold;
        }
        .post-item {
          padding: 1rem 0;
          border-bottom: 1px solid #e2e8f0;
          transition: transform 0.2s ease;
          @apply border-solarized-border dark:border-nightowl-border;
        }
        .post-item:hover {
          transform: translateX(8px);
        }
        .post-item:hover .post-date {
          @apply text-solarized-accent dark:text-nightowl-yellow;
        }
        .post-link {
          display: flex;
          justify-content: space-between;
          align-items: center;
          text-decoration: none;
          color: inherit;
        }
        .post-date {
          font-size: 0.9rem;
          color: #718096;
          transition: color 0.2s ease;
        }
        .post-item:hover {
          @apply border-solarized-accent dark:border-nightowl-yellow;
        }
      </style>

      {categories.map(category => (
        <div>
          <h2 class="category">{category}</h2>
          <ul class="post-list">
            {posts
              .filter(post => post.category === category)
              .map(post => (
                <li class="post-item">
                  <a class="post-link" href={post.url}>
                    <span>{post.frontmatter.title}</span>
                    <span class="post-date">{post.date}</span>
                  </a>
                </li>
              ))}
          </ul>
        </div>
      ))}
    </Content>
    <Footer />
  </Body>
</html>
